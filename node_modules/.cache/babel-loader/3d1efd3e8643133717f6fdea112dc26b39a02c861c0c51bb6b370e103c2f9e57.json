{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Padmavati Shankar\\\\3D-WebXR-Furniture\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { RGBELoader } from \"three/examples/jsm/loaders/RGBELoader\";\nimport { RoomEnvironment } from \"three/examples/jsm/environments/RoomEnvironment\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst models = [\"./dylan_armchair_yolk_yellow.glb\", \"./ivan_armchair_mineral_blue.glb\", \"./marble_coffee_table.glb\", \"./flippa_functional_coffee_table_w._storagewalnut.glb\", \"./frame_armchairpetrol_velvet_with_gold_frame.glb\", \"./elnaz_nesting_side_tables_brass__green_marble.glb\", \"./Standing_lamp.glb\", \"./Plant_Decor.glb\", \"./Little_Bookcase.glb\", \"./Dining_Set.glb\"];\nfunction App() {\n  _s();\n  useEffect(() => {\n    let scene, camera, renderer, controls;\n    let selectedObject = null;\n    const canvas = document.getElementById(\"canvas\");\n    const init = async () => {\n      // Scene setup\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.set(0, 2, 4);\n      renderer = new THREE.WebGLRenderer({\n        canvas,\n        antialias: true,\n        alpha: true\n      });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.outputEncoding = THREE.sRGBEncoding;\n\n      // Environment\n      const pmremGenerator = new THREE.PMREMGenerator(renderer);\n      const environment = new RoomEnvironment();\n      const envMap = pmremGenerator.fromScene(environment).texture;\n      scene.environment = envMap;\n\n      // Light\n      const hemiLight = new THREE.HemisphereLight(0xffffff, 0x444444, 1.2);\n      hemiLight.position.set(0, 20, 0);\n      scene.add(hemiLight);\n\n      // Controls\n      controls = new OrbitControls(camera, renderer.domElement);\n      controls.enableDamping = true;\n\n      // Load initial model\n      loadModel(models[0]);\n\n      // Event listeners\n      window.addEventListener(\"resize\", onWindowResize, false);\n      document.querySelectorAll(\"img.thumbnail\").forEach((item, index) => {\n        item.addEventListener(\"click\", () => onClicked(index));\n      });\n      animate();\n    };\n    const loadModel = modelPath => {\n      const loader = new GLTFLoader();\n      loader.load(modelPath, gltf => {\n        if (selectedObject) scene.remove(selectedObject);\n        selectedObject = gltf.scene;\n        selectedObject.position.set(0, 0, 0);\n        scene.add(selectedObject);\n      }, undefined, error => {\n        console.error(\"Error loading model:\", error);\n      });\n    };\n    const onClicked = index => {\n      loadModel(models[index]);\n      document.querySelectorAll(\"img.thumbnail\").forEach(img => img.classList.remove(\"clicked\"));\n      const clickedItem = document.getElementById(`item${index}`);\n      if (clickedItem) clickedItem.classList.add(\"clicked\");\n    };\n    const onWindowResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    init();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\",\n      style: {\n        width: \"100vw\",\n        height: \"100vh\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-selector\",\n      children: models.map((model, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        id: `item${index}`,\n        src: `/thumbnails/model${index}.png` // Place thumbnail images here\n        ,\n        alt: `Model ${index}`,\n        className: \"thumbnail\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","THREE","GLTFLoader","OrbitControls","RGBELoader","RoomEnvironment","jsxDEV","_jsxDEV","models","App","_s","scene","camera","renderer","controls","selectedObject","canvas","document","getElementById","init","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","set","WebGLRenderer","antialias","alpha","setSize","setPixelRatio","devicePixelRatio","outputEncoding","sRGBEncoding","pmremGenerator","PMREMGenerator","environment","envMap","fromScene","texture","hemiLight","HemisphereLight","add","domElement","enableDamping","loadModel","addEventListener","onWindowResize","querySelectorAll","forEach","item","index","onClicked","animate","modelPath","loader","load","gltf","remove","undefined","error","console","img","classList","clickedItem","aspect","updateProjectionMatrix","requestAnimationFrame","update","render","className","children","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","map","model","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Padmavati Shankar/3D-WebXR-Furniture/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { RGBELoader } from \"three/examples/jsm/loaders/RGBELoader\";\r\nimport { RoomEnvironment } from \"three/examples/jsm/environments/RoomEnvironment\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst models = [\r\n  \"./dylan_armchair_yolk_yellow.glb\",\r\n  \"./ivan_armchair_mineral_blue.glb\",\r\n  \"./marble_coffee_table.glb\",\r\n  \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\r\n  \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\r\n  \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\r\n  \"./Standing_lamp.glb\",\r\n  \"./Plant_Decor.glb\",\r\n  \"./Little_Bookcase.glb\",\r\n  \"./Dining_Set.glb\"\r\n];\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    let scene, camera, renderer, controls;\r\n    let selectedObject = null;\r\n    const canvas = document.getElementById(\"canvas\");\r\n\r\n    const init = async () => {\r\n      // Scene setup\r\n      scene = new THREE.Scene();\r\n      camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n      camera.position.set(0, 2, 4);\r\n\r\n      renderer = new THREE.WebGLRenderer({ canvas, antialias: true, alpha: true });\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n      renderer.setPixelRatio(window.devicePixelRatio);\r\n      renderer.outputEncoding = THREE.sRGBEncoding;\r\n\r\n      // Environment\r\n      const pmremGenerator = new THREE.PMREMGenerator(renderer);\r\n      const environment = new RoomEnvironment();\r\n      const envMap = pmremGenerator.fromScene(environment).texture;\r\n      scene.environment = envMap;\r\n\r\n      // Light\r\n      const hemiLight = new THREE.HemisphereLight(0xffffff, 0x444444, 1.2);\r\n      hemiLight.position.set(0, 20, 0);\r\n      scene.add(hemiLight);\r\n\r\n      // Controls\r\n      controls = new OrbitControls(camera, renderer.domElement);\r\n      controls.enableDamping = true;\r\n\r\n      // Load initial model\r\n      loadModel(models[0]);\r\n\r\n      // Event listeners\r\n      window.addEventListener(\"resize\", onWindowResize, false);\r\n      document.querySelectorAll(\"img.thumbnail\").forEach((item, index) => {\r\n        item.addEventListener(\"click\", () => onClicked(index));\r\n      });\r\n\r\n      animate();\r\n    };\r\n\r\n    const loadModel = (modelPath) => {\r\n      const loader = new GLTFLoader();\r\n      loader.load(\r\n        modelPath,\r\n        (gltf) => {\r\n          if (selectedObject) scene.remove(selectedObject);\r\n          selectedObject = gltf.scene;\r\n          selectedObject.position.set(0, 0, 0);\r\n          scene.add(selectedObject);\r\n        },\r\n        undefined,\r\n        (error) => {\r\n          console.error(\"Error loading model:\", error);\r\n        }\r\n      );\r\n    };\r\n\r\n    const onClicked = (index) => {\r\n      loadModel(models[index]);\r\n\r\n      document.querySelectorAll(\"img.thumbnail\").forEach((img) => img.classList.remove(\"clicked\"));\r\n      const clickedItem = document.getElementById(`item${index}`);\r\n      if (clickedItem) clickedItem.classList.add(\"clicked\");\r\n    };\r\n\r\n    const onWindowResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <canvas id=\"canvas\" style={{ width: \"100vw\", height: \"100vh\" }}></canvas>\r\n\r\n      <div className=\"model-selector\">\r\n        {models.map((model, index) => (\r\n          <img\r\n            key={index}\r\n            id={`item${index}`}\r\n            src={`/thumbnails/model${index}.png`} // Place thumbnail images here\r\n            alt={`Model ${index}`}\r\n            className=\"thumbnail\"\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}